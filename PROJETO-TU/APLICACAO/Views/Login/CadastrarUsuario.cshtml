@model DATABASE.Models.Usuarios

@{
    ViewBag.Title = "Cadastrar Usuario";
    Layout = null;
}

<!DOCTYPE html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Login</title>

    @* STYLES *@
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/Content/css")
    @Styles.Render("~/font-awesome/css")
    @Styles.Render("~/plugins/toastrStyles")


    @* SCRIPTS *@
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/plugins/slimScroll")
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/bundles/inspinia")

</head>


@using (Ajax.BeginForm("CadastrarUsuario", FormMethod.Post, new AjaxOptions
{
    OnSuccess = "OnSuccess",
    OnFailure = "OnFailure"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuarios</h4>
        <hr />
        @Html.ValidationSummary(true, "erro ao inserir", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@* DEFAULT *@
<script>
    var toastr;
    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": true,
        "progressBar": true,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut",
    }

    function OnFailure(response) {
        $.ajax({
            statusCode: {
                404: function () {
                    swal({
                        title: "Erro!",
                        text: "Página não encontrada\n" + response,
                        type: "error",
                        showCancelButton: false,
                        closeOnConfirm: false,
                        confirmButtonText: "Ok",
                        confirmButtonColor: "#1ab394"
                    }, function () {
                        return false;
                    });
                },
                500: function () {
                    swal({
                        title: "Erro!",
                        text: "Erro de servidor\n" + response,
                        type: "error",
                        showCancelButton: false,
                        closeOnConfirm: false,
                        confirmButtonText: "Ok",
                        confirmButtonColor: "#1ab394"
                    }, function () {
                        return false;
                    });
                }
            }
        });
    }

    function OnSuccess(response) {
        toastr.remove()
        if (response.erro == true) {
            toastr.error(response.msg);
            return false;
        }
        else {
            toastr.success("Entrando...");
            $(location).attr('href','/Home');
        }
    }
</script>

